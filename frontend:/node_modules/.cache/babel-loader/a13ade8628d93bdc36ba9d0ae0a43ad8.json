{"ast":null,"code":"var _jsxFileName = \"/Users/TommyRadin/Desktop/\\u043C\\u043E\\u0438 \\u0432\\u0435\\u0431 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438/mesto-react/src/components/AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function AddPlacePopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onAddPlace\n  } = _ref;\n  const [nameCard, setNameCard] = useState('');\n  const [link, setLink] = useState('');\n  const currentUser = useContext(CurrentUserContext); // useEffect(() => {\n  //     if (currentUser){\n  //     setNameCard(currentUser.name);\n  //     setLink(currentUser.link);\n  // }\n  //   }, [currentUser]); \n  // function handleChange(e) {\n  //     setNameCard(e.target.value);\n  //   };\n  // function handleChangeLink(e) {\n  //     setLink(e.target.value);\n  // };\n  // function handleSubmit(e) {\n  //     // Запрещаем браузеру переходить по адресу формы\n  //     e.preventDefault();\n  //     // Передаём значения управляемых компонентов во внешний обработчик\n  //     onAddPlace({\n  //         name: nameCard,\n  //         link,\n  //       });\n  //   } \n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    name: \"mesto\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"nameMesto\",\n        value: nameCard || '',\n        type: \"text\",\n        className: \"popup__input popup__text popup__text_type_mesto\",\n        name: \"mesto\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        required: true,\n        defaultValue: \"\",\n        minLength: \"2\",\n        maxLength: \"30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"nameMesto-error\",\n        className: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"link\",\n        type: \"url\",\n        value: link || '',\n        onChange: handleChangeLink,\n        className: \"popup__input popup__text popup__text_type_link\",\n        name: \"link\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        required: true,\n        defaultValue: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"link-error\",\n        className: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true),\n    onClose: isOpen,\n    isOpen: onClose,\n    onSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n}\n\n_s(AddPlacePopup, \"XKulwLAHuRQlTYB2cq+0B/pAtvI=\");\n\n_c = AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["/Users/TommyRadin/Desktop/мои веб разработки/mesto-react/src/components/AddPlacePopup.js"],"names":["React","useState","useEffect","useContext","PopupWithForm","CurrentUserContext","AddPlacePopup","isOpen","onClose","onAddPlace","nameCard","setNameCard","link","setLink","currentUser","handleChangeLink","handleSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,kBAAR,QAAiC,gCAAjC;;;AAEA,OAAO,SAASC,aAAT,OAIA;AAAA;;AAAA,MAJuB;AAC1BC,IAAAA,MAD0B;AAE1BC,IAAAA,OAF0B;AAG1BC,IAAAA;AAH0B,GAIvB;AAEC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMa,WAAW,GAAGX,UAAU,CAACE,kBAAD,CAA9B,CAJD,CAMC;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,sBACI,QAAC,aAAD;AACI,IAAA,KAAK,EAAC,+DADV;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,QAAQ,eACJ;AAAA,8BACA;AAAO,QAAA,EAAE,EAAC,WAAV;AAAsB,QAAA,KAAK,EAAEK,QAAQ,IAAI,EAAzC;AAA8C,QAAA,IAAI,EAAC,MAAnD;AAA0D,QAAA,SAAS,EAAC,iDAApE;AAAsH,QAAA,IAAI,EAAC,OAA3H;AAAmI,QAAA,WAAW,EAAC,kDAA/I;AAA0J,QAAA,QAAQ,MAAlK;AAAmK,QAAA,YAAY,EAAC,EAAhL;AAAmL,QAAA,SAAS,EAAC,GAA7L;AAAiM,QAAA,SAAS,EAAC;AAA3M;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAM,QAAA,EAAE,EAAC,iBAAT;AAA2B,QAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAO,QAAA,EAAE,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC,KAAtB;AAA4B,QAAA,KAAK,EAAEE,IAAI,IAAI,EAA3C;AAA+C,QAAA,QAAQ,EAAEG,gBAAzD;AAA2E,QAAA,SAAS,EAAC,gDAArF;AAAsI,QAAA,IAAI,EAAC,MAA3I;AAAkJ,QAAA,WAAW,EAAC,oGAA9J;AAAmL,QAAA,QAAQ,MAA3L;AAA4L,QAAA,YAAY,EAAC;AAAzM;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAM,QAAA,EAAE,EAAC,YAAT;AAAsB,QAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA,oBAJR;AAWI,IAAA,OAAO,EAAER,MAXb;AAYI,IAAA,MAAM,EAAEC,OAZZ;AAaI,IAAA,QAAQ,EAAEQ;AAbd;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA1DWV,a;;KAAAA,a","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext'; \n\nexport function AddPlacePopup({\n    isOpen, \n    onClose,\n    onAddPlace\n    }) {\n\n        const [nameCard, setNameCard] = useState('');\n        const [link, setLink] = useState('');\n        const currentUser = useContext(CurrentUserContext);\n\n        // useEffect(() => {\n        //     if (currentUser){\n        //     setNameCard(currentUser.name);\n        //     setLink(currentUser.link);\n            \n        // }\n            \n        //   }, [currentUser]); \n\n        // function handleChange(e) {\n        //     setNameCard(e.target.value);\n        //   };\n        \n        // function handleChangeLink(e) {\n        //     setLink(e.target.value);\n        // };\n        \n        // function handleSubmit(e) {\n        //     // Запрещаем браузеру переходить по адресу формы\n        //     e.preventDefault();\n             \n        //     // Передаём значения управляемых компонентов во внешний обработчик\n        //     onAddPlace({\n        //         name: nameCard,\n        //         link,\n                \n        //       });\n               \n        //   } \n\n        return (\n            <PopupWithForm\n                title='Новое место'\n                name='mesto'\n                children={\n                    <>\n                    <input id=\"nameMesto\" value={nameCard || ''}  type=\"text\" className=\"popup__input popup__text popup__text_type_mesto\" name=\"mesto\" placeholder=\"Название\" required defaultValue=\"\" minLength=\"2\" maxLength=\"30\"/>\n                    <span id=\"nameMesto-error\" className=\"error\"></span>\n                    <input id=\"link\" type=\"url\" value={link || ''} onChange={handleChangeLink} className=\"popup__input popup__text popup__text_type_link\" name=\"link\" placeholder=\"Ссылка на картинку\" required defaultValue=\"\"/>\n                    <span id=\"link-error\" className=\"error\"></span>\n                    </>\n                }\n                onClose={isOpen}\n                isOpen={onClose}\n                onSubmit={handleSubmit}\n            \n            /> \n        )\n    }\n"]},"metadata":{},"sourceType":"module"}