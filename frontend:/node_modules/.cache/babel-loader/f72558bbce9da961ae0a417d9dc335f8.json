{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = response => {\n  try {\n    if (response.status === 201) {\n      return response.json();\n    }\n  } catch (e) {\n    return e;\n  }\n};\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => {\n    console.log(response.json());\n  }).then(data => {\n    console.log(response.json());\n\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"sources":["/Users/TommyRadin/Desktop/мои веб разработки/react-mesto-auth/src/components/Auth.js"],"names":["BASE_URL","checkResponse","response","status","json","e","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","catch","err","console","log","authorize","data","jwt","localStorage","setItem","getContent","token"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AAEP,MAAMC,aAAa,GAAIC,QAAD,IAAc;AAChC,MAAI;AACA,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA4B;AAC1B,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;AACF,GAJH,CAII,OAAMC,CAAN,EAAQ;AACR,WAAQA,CAAR;AACD;AACN,CARD;;AAUA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAET,QAAS,SAAb,EAAuB;AACjCU,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AAN2B,GAAvB,CAAL,CAQNO,IARM,CAQDd,aARC,EASNc,IATM,CASAC,GAAD,IAAS;AACb,WAAOA,GAAP;AACD,GAXM,EAYNC,KAZM,CAYCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZT,CAAP;AAaD,CAdM;AAgBP,OAAO,MAAMG,SAAS,GAAG,CAACd,KAAD,EAAQC,QAAR,KAAqB;AAC1C,SAAOC,KAAK,CAAE,GAAET,QAAS,SAAb,EAAuB;AACjCU,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AAN2B,GAAvB,CAAL,CAQNO,IARM,CAQAb,QAAD,IAAc;AAChBiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAQ,CAACE,IAAT,EAAZ;AAA6B,GAT1B,EAUNW,IAVM,CAUAO,IAAD,IAAU;AACZH,IAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAQ,CAACE,IAAT,EAAZ;;AACD,QAAIkB,IAAI,CAACC,GAAT,EAAa;AACbC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACC,GAAjC;AACA,aAAOD,IAAP;AACC;AACH,GAhBM,EAiBNL,KAjBM,CAiBAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAjBP,CAAP;AAkBH,CAnBM;AAqBP,OAAO,MAAMQ,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAOlB,KAAK,CAAE,GAAET,QAAS,WAAb,EAAyB;AACnCU,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB,kBAFT;AAGP,uBAAkB,UAASgB,KAAM;AAH1B;AAF0B,GAAzB,CAAL,CAQNZ,IARM,CAQDC,GAAG,IAAIA,GAAG,CAACZ,IAAJ,EARN,EASNW,IATM,CASDO,IAAI,IAAIA,IATP,CAAP;AAUH,CAXM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = (response) => {\n    try {\n        if (response.status === 201){\n          return response.json();\n        }\n      } catch(e){\n        return (e)\n      }\n}\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then(checkResponse)\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n}; \n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    })\n    .then((response) => {\n        console.log(response.json())})\n    .then((data) => {\n        console.log(response.json())\n       if (data.jwt){\n       localStorage.setItem('jwt', data.jwt);\n       return data;\n       }\n    })\n    .catch(err => console.log(err))\n}; \n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    .then(res => res.json())\n    .then(data => data)\n}"]},"metadata":{},"sourceType":"module"}