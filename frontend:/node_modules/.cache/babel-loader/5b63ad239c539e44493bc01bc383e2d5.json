{"ast":null,"code":"var _jsxFileName = \"/Users/TommyRadin/Desktop/\\u043C\\u043E\\u0438 \\u0432\\u0435\\u0431 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport { AddPlacePopup } from './AddPlacePopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({\n    name: '',\n    about: ''\n  });\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    // const handleEscClose = (e) => {\n    //   if (e.key === \"Escape\") {\n    //     closeAllPopups();\n    //   }\n    // };\n    // document.addEventListener(\"keydown\", handleEscClose);\n    // return () => document.removeEventListener(\"keydown\", handleEscClose);\n    api.getProfileInfo().then(user => {\n      setCurrentUser(user);\n    }).catch(err => console.log(`Ошибка профиля: ${err}`));\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => console.log(`Ошибка при добавлении карточек: ${err}`));\n  }, []);\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  };\n\n  const handleUpdateUser = user => {\n    api.editProfile(user).then(res => {\n      setCurrentUser(res);\n      setEditProfilePopupOpen(false);\n    }).catch(err => console.log(`Ошибка обновления профиля: ${err}`));\n  };\n\n  const handleUpdateAvatar = user => {\n    api.avatarProfile(user).then(res => {\n      setCurrentUser(res);\n      setEditAvatarPopupOpen(false);\n    }).catch(err => console.log(`Ошибка аватара: ${err}`));\n  };\n\n  const handleAddPlaceSubmit = user => {\n    api.addCard(user).then(res => {\n      setAddPlacePopupOpen(false);\n      setCards([res, ...cards]);\n    }).catch(err => console.log(`Ошибка аватара: ${err}`));\n  };\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  ;\n\n  function handleCardDelete(card) {\n    // Снова проверяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id; // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.deleteCard(card._id, !isOwn).then(newCard => {\n      setCards(state => state.filter(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardsLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"lBiQDchNVXuxL4lKFZ1k4muZL84=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/TommyRadin/Desktop/мои веб разработки/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","createContext","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","name","about","cards","setCards","getProfileInfo","then","user","catch","err","console","log","getInitialCards","res","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","editProfile","handleUpdateAvatar","avatarProfile","handleAddPlaceSubmit","addCard","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","isOwn","owner","deleteCard","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\nimport {EditProfilePopup} from './EditProfilePopup';\nimport {EditAvatarPopup} from './EditAvatarPopup';\nimport {AddPlacePopup} from './AddPlacePopup';\n\n\nfunction App() {\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(null);\n    const [currentUser, setCurrentUser] = useState({name: '', about: ''});\n    const [cards, setCards] = useState([]);\n\n    useEffect(() => {\n        // const handleEscClose = (e) => {\n        //   if (e.key === \"Escape\") {\n        //     closeAllPopups();\n        //   }\n        // };\n    \n        // document.addEventListener(\"keydown\", handleEscClose);\n    \n        // return () => document.removeEventListener(\"keydown\", handleEscClose);\n\n        api\n        .getProfileInfo()\n        .then((user) => {\n            setCurrentUser(user);\n            \n        })\n        .catch(err => console.log(`Ошибка профиля: ${err}`));\n\n        api\n        .getInitialCards()\n        .then((res) => {\n            setCards(res)\n            \n        })\n        .catch(err => console.log(`Ошибка при добавлении карточек: ${err}`))\n      }, []); \n\n    const handleEditAvatarClick = () => {\n        setEditAvatarPopupOpen(true);\n    };\n    const handleEditProfileClick = () => {\n        setEditProfilePopupOpen(true);\n    }\n    const handleAddPlaceClick= () => {\n        setAddPlacePopupOpen(true);\n    }\n    const handleCardClick = (card) => {\n        setSelectedCard(card);\n    }\n\n    const closeAllPopups = () => {\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setEditAvatarPopupOpen(false);\n        setSelectedCard(null);\n    }\n\n    const handleUpdateUser = (user) => {\n        api\n        .editProfile(user)\n        .then(res => {\n            setCurrentUser(res);\n            setEditProfilePopupOpen(false);\n        \n        })\n        .catch(err => console.log(`Ошибка обновления профиля: ${err}`));\n    };\n\n    const handleUpdateAvatar = (user) => {\n        api\n        .avatarProfile(user)\n        .then((res) => {\n            setCurrentUser(res);\n            setEditAvatarPopupOpen(false);\n        })\n        .catch(err => console.log(`Ошибка аватара: ${err}`));\n    };\n\n    const handleAddPlaceSubmit = (user) => {\n        api\n        .addCard(user)\n        .then((res) => {\n            setAddPlacePopupOpen(false);\n            setCards([res, ...cards]);\n        })\n        .catch(err => console.log(`Ошибка аватара: ${err}`));\n    }\n\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api\n        .changeLikeCardStatus(card._id, isLiked)\n        .then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    };\n    \n    function handleCardDelete(card) {\n        // Снова проверяем, являемся ли мы владельцем текущей карточки\n        const isOwn = card.owner._id === currentUser._id;\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api\n        .deleteCard(card._id, !isOwn)\n        .then((newCard) => {\n            setCards((state) => state.filter((c) => c._id === card._id ? newCard : c));\n\n        });\n    } \n\n\n    return (  \n        <>\n        <CurrentUserContext.Provider value={currentUser}>\n            <Header/>\n\n            <Main\n                onEditAvatar={handleEditAvatarClick}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n                cards={cards}\n                onCardsLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n            />\n\n            <Footer/>\n\n            <EditProfilePopup \n            isOpen={isEditProfilePopupOpen} \n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser} \n            /> \n\n            <AddPlacePopup \n            isOpen={isAddPlacePopupOpen} \n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit} \n            />\n\n            <EditAvatarPopup \n            isOpen={isEditAvatarPopupOpen} \n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar} \n            />\n\n            <ImagePopup \n                card = {selectedCard}\n                onClose = {closeAllPopups}\n            \n            />\n        </CurrentUserContext.Provider>\n \n        </>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}