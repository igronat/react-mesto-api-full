{"ast":null,"code":"var _jsxFileName = \"/Users/TommyRadin/Desktop/\\u043C\\u043E\\u0438 \\u0432\\u0435\\u0431 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438/react-mesto-auth/src/components/InfoTooltip.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InfoTooltip(_ref) {\n  _s();\n\n  let {\n    name,\n    img,\n    title,\n    isOpen,\n    onClose\n  } = _ref;\n  useEffect(() => {\n    const handleEscClose = e => {\n      if (e.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener(\"keydown\", handleEscClose);\n    }\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isOpen ? `popup popup_type_${name} popup_opened` : `popup popup_type_${name}`,\n    id: name,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__overlay\",\n      id: `overlay__${name}`,\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close\",\n        type: \"button\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        name: name,\n        className: \"popup__form popup__form_type_infoTooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"popup__foto_type_infoTooltip\",\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"popup__title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfoTooltip, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = InfoTooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"sources":["/Users/TommyRadin/Desktop/мои веб разработки/react-mesto-auth/src/components/InfoTooltip.js"],"names":["React","useEffect","InfoTooltip","name","img","title","isOpen","onClose","handleEscClose","e","key","document","addEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,SAASC,WAAT,OAA4D;AAAA;;AAAA,MAAvC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,MAApB;AAA4BC,IAAAA;AAA5B,GAAuC;AACzEN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,cAAc,GAAIC,CAAD,IAAO;AAC1B,UAAIA,CAAC,CAACC,GAAF,KAAU,QAAd,EAAwB;AACtBH,QAAAA,OAAO;AACR;AACF,KAJH;;AAKA,QAAID,MAAJ,EAAY;AAGVK,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCJ,cAArC;AAGD;AACF,GAbQ,EAaN,CAACF,MAAD,CAbM,CAAT;AAeA,sBACE;AACE,IAAA,SAAS,EACPA,MAAM,GACD,oBAAmBH,IAAK,eADvB,GAED,oBAAmBA,IAAK,EAJjC;AAME,IAAA,EAAE,EAAEA,IANN;AAAA,4BAQE;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,EAAE,EAAG,YAAWA,IAAK,EAFvB;AAGE,MAAA,OAAO,EAAEI;AAHX;AAAA;AAAA;AAAA;AAAA,YARF,eAaE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAEA;AAHX;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAM,QAAA,IAAI,EAAEJ,IAAZ;AAAkB,QAAA,SAAS,EAAC,0CAA5B;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,8BAAf;AAA8C,UAAA,GAAG,EAAEC;AAAnD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,oBAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA3CuBH,W;;KAAAA,W","sourcesContent":["import React, { useEffect } from \"react\";\n\nexport default function InfoTooltip({ name, img, title, isOpen, onClose }) {\n  useEffect(() => {\n    const handleEscClose = (e) => {\n        if (e.key === \"Escape\") {\n          onClose();\n        }\n      };\n    if (isOpen) {\n      \n\n      document.addEventListener(\"keydown\", handleEscClose);\n\n      \n    }\n  }, [isOpen]);\n\n  return (\n    <div\n      className={\n        isOpen\n          ? `popup popup_type_${name} popup_opened`\n          : `popup popup_type_${name}`\n      }\n      id={name}\n    >\n      <div\n        className=\"popup__overlay\"\n        id={`overlay__${name}`}\n        onClick={onClose}\n      ></div>\n      <div className=\"popup__content\">\n        <button\n          className=\"popup__close\"\n          type=\"button\"\n          onClick={onClose}\n        ></button>\n        <form name={name} className=\"popup__form popup__form_type_infoTooltip\">\n          <img className=\"popup__foto_type_infoTooltip\" src={img} />\n          <h2 className=\"popup__title\">{title}</h2>\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}