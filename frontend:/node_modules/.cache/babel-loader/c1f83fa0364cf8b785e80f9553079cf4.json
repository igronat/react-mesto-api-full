{"ast":null,"code":"var _jsxFileName = \"/Users/TommyRadin/Desktop/\\u043C\\u043E\\u0438 \\u0432\\u0435\\u0431 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438/mesto-react/src/components/AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function AddPlacePopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onAddPlace\n  } = _ref;\n  const [nameCard, setNameCard] = useState('');\n  const [link, setLink] = useState('');\n  useEffect(() => {\n    refAvatar.current.value = '';\n  }, [isOpen]);\n\n  function handleChange(e) {\n    setNameCard(e.target.value);\n  }\n\n  ;\n\n  function handleChangeLink(e) {\n    setLink(e.target.value);\n  }\n\n  ;\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    onAddPlace({\n      name: nameCard,\n      link\n    }); // setNameCard('');\n    // setLink('');\n    // e.target.reset();\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    name: \"mesto\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"nameMesto\",\n        value: nameCard || '',\n        onChange: handleChange,\n        type: \"text\",\n        className: \"popup__input popup__text popup__text_type_mesto\",\n        name: \"mesto\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"nameMesto-error\",\n        className: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"link\",\n        type: \"url\",\n        value: link || '',\n        onChange: handleChangeLink,\n        className: \"popup__input popup__text popup__text_type_link\",\n        name: \"link\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"link-error\",\n        className: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true),\n    onClose: onClose,\n    isOpen: isOpen,\n    onSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n}\n\n_s(AddPlacePopup, \"So8ZxEldKpYhAlhHMD4y7gxvyMo=\");\n\n_c = AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["/Users/TommyRadin/Desktop/мои веб разработки/mesto-react/src/components/AddPlacePopup.js"],"names":["React","useState","PopupWithForm","AddPlacePopup","isOpen","onClose","onAddPlace","nameCard","setNameCard","link","setLink","useEffect","refAvatar","current","value","handleChange","e","target","handleChangeLink","handleSubmit","preventDefault","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAGA,OAAO,SAASC,aAAT,OAIA;AAAA;;AAAA,MAJuB;AAC1BC,IAAAA,MAD0B;AAE1BC,IAAAA,OAF0B;AAG1BC,IAAAA;AAH0B,GAIvB;AAEC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEAU,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,SAAS,CAACC,OAAV,CAAkBC,KAAlB,GAA0B,EAA1B;AACH,GAFQ,EAEN,CAACV,MAAD,CAFM,CAAT;;AAIA,WAASW,YAAT,CAAsBC,CAAtB,EAAyB;AACrBR,IAAAA,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASH,KAAV,CAAX;AACH;;AAAA;;AAED,WAASI,gBAAT,CAA0BF,CAA1B,EAA6B;AACzBN,IAAAA,OAAO,CAACM,CAAC,CAACC,MAAF,CAASH,KAAV,CAAP;AACH;;AAAA;;AAED,WAASK,YAAT,CAAsBH,CAAtB,EAAyB;AACrB;AACAA,IAAAA,CAAC,CAACI,cAAF,GAFqB,CAIrB;;AACAd,IAAAA,UAAU,CAAC;AACPe,MAAAA,IAAI,EAAEd,QADC;AAEPE,MAAAA;AAFO,KAAD,CAAV,CALqB,CAUrB;AACA;AACA;AAEH;;AAAA;AAED,sBACI,QAAC,aAAD;AACI,IAAA,KAAK,EAAC,+DADV;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,QAAQ,eACJ;AAAA,8BACA;AAAO,QAAA,EAAE,EAAC,WAAV;AAAsB,QAAA,KAAK,EAAEF,QAAQ,IAAI,EAAzC;AAA6C,QAAA,QAAQ,EAAEQ,YAAvD;AAAqE,QAAA,IAAI,EAAC,MAA1E;AAAiF,QAAA,SAAS,EAAC,iDAA3F;AAA6I,QAAA,IAAI,EAAC,OAAlJ;AAA0J,QAAA,WAAW,EAAC,kDAAtK;AAAiL,QAAA,QAAQ,MAAzL;AAA0L,QAAA,SAAS,EAAC,GAApM;AAAwM,QAAA,SAAS,EAAC;AAAlN;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAM,QAAA,EAAE,EAAC,iBAAT;AAA2B,QAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAO,QAAA,EAAE,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC,KAAtB;AAA4B,QAAA,KAAK,EAAEN,IAAI,IAAI,EAA3C;AAA+C,QAAA,QAAQ,EAAES,gBAAzD;AAA2E,QAAA,SAAS,EAAC,gDAArF;AAAsI,QAAA,IAAI,EAAC,MAA3I;AAAkJ,QAAA,WAAW,EAAC,oGAA9J;AAAmL,QAAA,QAAQ;AAA3L;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAM,QAAA,EAAE,EAAC,YAAT;AAAsB,QAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA,oBAJR;AAWI,IAAA,OAAO,EAAEb,OAXb;AAYI,IAAA,MAAM,EAAED,MAZZ;AAaI,IAAA,QAAQ,EAAEe;AAbd;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAvDWhB,a;;KAAAA,a","sourcesContent":["import React, { useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\n\nexport function AddPlacePopup({\n    isOpen, \n    onClose,\n    onAddPlace\n    }) {\n\n        const [nameCard, setNameCard] = useState('');\n        const [link, setLink] = useState('');\n\n        useEffect(() => {\n            refAvatar.current.value = ''; \n        }, [isOpen])\n        \n        function handleChange(e) {\n            setNameCard(e.target.value);\n        };\n        \n        function handleChangeLink(e) {\n            setLink(e.target.value);\n        };\n        \n        function handleSubmit(e) {\n            // Запрещаем браузеру переходить по адресу формы\n            e.preventDefault();\n             \n            // Передаём значения управляемых компонентов во внешний обработчик\n            onAddPlace({\n                name: nameCard,\n                link,\n            });\n\n            // setNameCard('');\n            // setLink('');\n            // e.target.reset();\n               \n        }; \n\n        return (\n            <PopupWithForm\n                title='Новое место'\n                name='mesto'\n                children={\n                    <>\n                    <input id=\"nameMesto\" value={nameCard || ''} onChange={handleChange} type=\"text\" className=\"popup__input popup__text popup__text_type_mesto\" name=\"mesto\" placeholder=\"Название\" required minLength=\"2\" maxLength=\"30\"/>\n                    <span id=\"nameMesto-error\" className=\"error\"></span>\n                    <input id=\"link\" type=\"url\" value={link || ''} onChange={handleChangeLink} className=\"popup__input popup__text popup__text_type_link\" name=\"link\" placeholder=\"Ссылка на картинку\" required/>\n                    <span id=\"link-error\" className=\"error\"></span>\n                    </>\n                }\n                onClose={onClose}\n                isOpen={isOpen}\n                onSubmit={handleSubmit}\n            \n            /> \n        )\n    }\n"]},"metadata":{},"sourceType":"module"}