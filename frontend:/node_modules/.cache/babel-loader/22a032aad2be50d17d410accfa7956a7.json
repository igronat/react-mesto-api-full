{"ast":null,"code":"var _jsxFileName = \"/Users/TommyRadin/Desktop/\\u043C\\u043E\\u0438 \\u0432\\u0435\\u0431 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport { AddPlacePopup } from './AddPlacePopup';\nimport Login from './Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({\n    name: '',\n    about: ''\n  });\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    api.getProfileInfo().then(user => {\n      setCurrentUser(user);\n    }).catch(err => console.log(`Ошибка профиля: ${err}`));\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => console.log(`Ошибка при добавлении карточек: ${err}`));\n  }, []);\n  useEffect(() => {\n    const handleEscClose = e => {\n      if (e.key === \"Escape\") {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscClose);\n    return () => document.removeEventListener(\"keydown\", handleEscClose);\n  }, []);\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  };\n\n  const handleUpdateUser = user => {\n    api.editProfile(user).then(res => {\n      setCurrentUser(res);\n      setEditProfilePopupOpen(false);\n    }).catch(err => console.log(`Ошибка обновления профиля: ${err}`));\n  };\n\n  const handleUpdateAvatar = user => {\n    api.avatarProfile(user).then(res => {\n      setCurrentUser(res);\n      setEditAvatarPopupOpen(false);\n    }).catch(err => console.log(`Ошибка аватара: ${err}`));\n  };\n\n  const handleAddPlaceSubmit = user => {\n    api.addCard(user).then(res => {\n      setAddPlacePopupOpen(false);\n      setCards([res, ...cards]);\n    }).catch(err => console.log(`Ошибка аватара: ${err}`));\n  };\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  ;\n\n  function handleCardDelete(card) {\n    // Снова проверяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id; // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.deleteCard(card._id, !isOwn).then(() => {\n      setCards(state => state.filter(c => c._id != card._id));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        children: [/*#__PURE__*/_jsxDEV(Main, {\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardsLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"4UmNeHo0YQnLkENc2DBb9UUAmpg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/TommyRadin/Desktop/мои веб разработки/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","Redirect","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","name","about","cards","setCards","loggedIn","setLoggedIn","getProfileInfo","then","user","catch","err","console","log","getInitialCards","res","handleEscClose","e","key","closeAllPopups","document","addEventListener","removeEventListener","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleUpdateUser","editProfile","handleUpdateAvatar","avatarProfile","handleAddPlaceSubmit","addCard","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","isOwn","owner","deleteCard","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\nimport {EditProfilePopup} from './EditProfilePopup';\nimport {EditAvatarPopup} from './EditAvatarPopup';\nimport {AddPlacePopup} from './AddPlacePopup';\nimport Login from './Login';\n\nfunction App() {\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(null);\n    const [currentUser, setCurrentUser] = useState({name: '', about: ''});\n    const [cards, setCards] = useState([]);\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    useEffect(() => {\n        api\n        .getProfileInfo()\n        .then((user) => {\n            setCurrentUser(user);\n            \n        })\n        .catch(err => console.log(`Ошибка профиля: ${err}`));\n\n        api\n        .getInitialCards()\n        .then((res) => {\n            setCards(res)\n            \n        })\n        .catch(err => console.log(`Ошибка при добавлении карточек: ${err}`))\n    }, []); \n\n    useEffect(() => {\n        const handleEscClose = (e) => {\n          if (e.key === \"Escape\") {\n            closeAllPopups();\n          }\n        };\n    \n        document.addEventListener(\"keydown\", handleEscClose);\n    \n        return () => document.removeEventListener(\"keydown\", handleEscClose);\n\n      }, []); \n\n    const handleEditAvatarClick = () => {\n        setEditAvatarPopupOpen(true);\n    };\n    const handleEditProfileClick = () => {\n        setEditProfilePopupOpen(true);\n    }\n    const handleAddPlaceClick= () => {\n        setAddPlacePopupOpen(true);\n    }\n    const handleCardClick = (card) => {\n        setSelectedCard(card);\n    }\n\n    const closeAllPopups = () => {\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setEditAvatarPopupOpen(false);\n        setSelectedCard(null);\n    }\n\n    const handleUpdateUser = (user) => {\n        api\n        .editProfile(user)\n        .then(res => {\n            setCurrentUser(res);\n            setEditProfilePopupOpen(false);\n        \n        })\n        .catch(err => console.log(`Ошибка обновления профиля: ${err}`));\n    };\n\n    const handleUpdateAvatar = (user) => {\n        api\n        .avatarProfile(user)\n        .then((res) => {\n            setCurrentUser(res);\n            setEditAvatarPopupOpen(false);\n        })\n        .catch(err => console.log(`Ошибка аватара: ${err}`));\n    };\n\n    const handleAddPlaceSubmit = (user) => {\n        api\n        .addCard(user)\n        .then((res) => {\n            setAddPlacePopupOpen(false);\n            setCards([res, ...cards]);\n        })\n        .catch(err => console.log(`Ошибка аватара: ${err}`));\n    }\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api\n        .changeLikeCardStatus(card._id, isLiked)\n        .then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    };\n    \n    function handleCardDelete(card) {\n        // Снова проверяем, являемся ли мы владельцем текущей карточки\n        const isOwn = card.owner._id === currentUser._id;\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api\n        .deleteCard(card._id, !isOwn)\n        .then(() => {\n            setCards((state) => state.filter((c) => c._id != card._id ));\n\n        });\n    } \n\n    return (  \n        <CurrentUserContext.Provider value={currentUser}>\n       \n\n        <Switch>\n             \n        <Route path=\"/login\">  \n            <Login  />\n        </Route>\n\n        \n        <Route path='/main'>\n        \n\n            <Main\n                onEditAvatar={handleEditAvatarClick}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n                cards={cards}\n                onCardsLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n            />\n\n            <Footer/>\n\n            <EditProfilePopup \n            isOpen={isEditProfilePopupOpen} \n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser} \n            /> \n\n            <AddPlacePopup \n            isOpen={isAddPlacePopupOpen} \n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit} \n            />\n\n            <EditAvatarPopup \n            isOpen={isEditAvatarPopupOpen} \n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar} \n            />\n\n            <ImagePopup \n                card = {selectedCard}\n                onClose = {closeAllPopups}\n            \n            />\n        \n        </Route>\n       \n        <Route exact path=\"/\">\n        {loggedIn ? <Redirect to=\"/main\" /> : <Redirect to=\"/login\" />}\n          \n        </Route>\n \n        </Switch>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}