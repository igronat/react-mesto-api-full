{"ast":null,"code":"var _jsxFileName = \"/Users/TommyRadin/Desktop/\\u043C\\u043E\\u0438 \\u0432\\u0435\\u0431 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438/mesto-react/mesto-react/src/components/PopupWithForm.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PopupWithForm(_ref) {\n  let {\n    title,\n    name,\n    children,\n    onOpen,\n    onClose\n  } = _ref;\n  // constructor({ selector, handleCardSubmit }) {\n  //     this._popup = document.getElementById(selector)\n  //     this._handleCardSubmit = handleCardSubmit;\n  //     this._formElement = this._popup.querySelector('.popup__form');\n  //     this._inputList = this._formElement.querySelectorAll('.popup__input');\n  //     this._submitButton = this._formElement.querySelector('.popup__button');\n  //     this._initialText =  this._submitButton.textContent\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: onOpen ? `popup popup_type_${name} popup_opene` : `popup popup_type_${name}`,\n    id: name,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__overlay\",\n      id: `overlay__${name}`,\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close\",\n        type: \"button\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        name: name,\n        className: `popup__form popup__${name}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"popup__title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), children, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `popup__button button popup__button_type_save${name}`,\n          id: `button-save${name}`,\n          disabled: true,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this); //     _getInputValues() { //ищем импуты\n  //         this._formValues = {};\n  //         this._inputList.forEach(input => {\n  //             this._formValues[input.name] = input.value;\n  //         });\n  //         return this._formValues;\n  //     }\n  //     _handleEscClose = (evt) => { //функция закрытия попапа через esc\n  //         if (evt.key === 'Escape') {\n  //             this.closePopup()\n  //         }\n  //     }\n  //     open() { //функция открытия окна popup\n  //         this._popup.classList.add('popup_opened');\n  //         document.addEventListener('keydown', this._handleEscClose);\n  //     }\n  //     closePopup() {\n  //         this._popup.classList.remove('popup_opened');\n  //         document.removeEventListener('keydown', this._handleEscClose);\n  //         this._formElement.reset();\n  //     }\n  //     renderLoading(isLoading, buttonText = 'Сохранение...') {\n  //     if (isLoading) {\n  //       this._submitButton.textContent = buttonText;\n  //     } else {\n  //       this._submitButton.textContent = this._initialText;\n  //     }\n  //   }\n  //     setEventListeners() {\n  //         const buttonClose = this._popup.querySelector('.popup__close');\n  //         const overlayClose = this._popup.querySelector('.popup__overlay');\n  //         buttonClose.addEventListener('click', () => this.closePopup());\n  //         overlayClose.addEventListener('click', () => this.closePopup());\n  //         this._formElement.addEventListener('submit', (evt) => {\n  //             evt.preventDefault();\n  //             this._handleCardSubmit(this._getInputValues());\n  //         })\n  //     }\n}\n_c = PopupWithForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupWithForm\");","map":{"version":3,"sources":["/Users/TommyRadin/Desktop/мои веб разработки/mesto-react/mesto-react/src/components/PopupWithForm.js"],"names":["React","useState","PopupWithForm","title","name","children","onOpen","onClose"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,aAAT,OAMZ;AAAA,MANmC;AAClCC,IAAAA,KADkC;AAElCC,IAAAA,IAFkC;AAGlCC,IAAAA,QAHkC;AAIlCC,IAAAA,MAJkC;AAKlCC,IAAAA;AALkC,GAMnC;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,sBACI;AAAK,IAAA,SAAS,EAAED,MAAM,GAAI,oBAAmBF,IAAK,cAA5B,GAA6C,oBAAmBA,IAAK,EAA3F;AAA8F,IAAA,EAAE,EAAEA,IAAlG;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,EAAE,EAAG,YAAWA,IAAK,EAArD;AAAwD,MAAA,OAAO,EAAEG;AAAjE;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,OAAO,EAAEA;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAEH,IAAZ;AAAkB,QAAA,SAAS,EAAG,sBAAqBA,IAAK,EAAxD;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,oBAA8BD;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKE,QAFL,eAGI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAG,+CAA8CD,IAAK,EAArF;AAAwF,UAAA,EAAE,EAAG,cAAaA,IAAK,EAA/G;AAAkH,UAAA,QAAQ,MAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAXD,CAyBH;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEC;KAlFuBF,a","sourcesContent":["import React, { useState } from 'react';\n\nexport default function PopupWithForm({\n    title,\n    name,\n    children,\n    onOpen,\n    onClose\n}) {\n    // constructor({ selector, handleCardSubmit }) {\n    //     this._popup = document.getElementById(selector)\n    //     this._handleCardSubmit = handleCardSubmit;\n    //     this._formElement = this._popup.querySelector('.popup__form');\n    //     this._inputList = this._formElement.querySelectorAll('.popup__input');\n    //     this._submitButton = this._formElement.querySelector('.popup__button');\n    //     this._initialText =  this._submitButton.textContent\n\n    // }\n\n    return (\n        <div className={onOpen ? `popup popup_type_${name} popup_opene` : `popup popup_type_${name}`} id={name}>\n        <div className=\"popup__overlay\" id={`overlay__${name}`} onClick={onClose}></div>\n        <div className=\"popup__content\">\n            <button className=\"popup__close\" type=\"button\" onClick={onClose}></button>\n            <form name={name} className={`popup__form popup__${name}`}>\n                <h2 className=\"popup__title\">{title}</h2>\n                {children}\n                <button type=\"submit\" className={`popup__button button popup__button_type_save${name}`} id={`button-save${name}`} disabled >Сохранить</button>\n            </form>\n        </div>\n    </div>\n    )\n\n//     _getInputValues() { //ищем импуты\n//         this._formValues = {};\n//         this._inputList.forEach(input => {\n//             this._formValues[input.name] = input.value;\n\n//         });\n\n//         return this._formValues;\n\n//     }\n\n//     _handleEscClose = (evt) => { //функция закрытия попапа через esc\n//         if (evt.key === 'Escape') {\n//             this.closePopup()\n//         }\n\n//     }\n\n//     open() { //функция открытия окна popup\n//         this._popup.classList.add('popup_opened');\n//         document.addEventListener('keydown', this._handleEscClose);\n//     }\n\n//     closePopup() {\n//         this._popup.classList.remove('popup_opened');\n//         document.removeEventListener('keydown', this._handleEscClose);\n//         this._formElement.reset();\n\n//     }\n\n//     renderLoading(isLoading, buttonText = 'Сохранение...') {\n//     if (isLoading) {\n//       this._submitButton.textContent = buttonText;\n//     } else {\n//       this._submitButton.textContent = this._initialText;\n//     }\n//   }\n\n//     setEventListeners() {\n//         const buttonClose = this._popup.querySelector('.popup__close');\n//         const overlayClose = this._popup.querySelector('.popup__overlay');\n//         buttonClose.addEventListener('click', () => this.closePopup());\n//         overlayClose.addEventListener('click', () => this.closePopup());\n//         this._formElement.addEventListener('submit', (evt) => {\n//             evt.preventDefault();\n//             this._handleCardSubmit(this._getInputValues());\n\n//         })\n\n//     }\n\n}"]},"metadata":{},"sourceType":"module"}