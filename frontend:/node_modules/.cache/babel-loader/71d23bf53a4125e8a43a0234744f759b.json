{"ast":null,"code":"var _jsxFileName = \"/Users/TommyRadin/Desktop/\\u043C\\u043E\\u0438 \\u0432\\u0435\\u0431 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438/react-mesto-auth/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditProfilePopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onUpdateUser\n  } = _ref;\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const currentUser = useContext(CurrentUserContext);\n  useEffect(() => {\n    if (currentUser) {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    }\n  }, [currentUser, isOpen]);\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  ;\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  ;\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    name: \"profile\",\n    onClose: onClose,\n    isOpen: isOpen,\n    onSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n}\n\n_s(EditProfilePopup, \"xN46w6he9KBZHBk1q+JY6GV4FrA=\");\n\n_c = EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/TommyRadin/Desktop/мои веб разработки/react-mesto-auth/src/components/EditProfilePopup.js"],"names":["React","useState","useEffect","useContext","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","name","setName","description","setDescription","currentUser","about","handleChange","e","target","value","handleChangeDescription","handleSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,kBAAR,QAAiC,gCAAjC;;AAEA,OAAO,SAASC,gBAAT,OAIA;AAAA;;AAAA,MAJ0B;AAC7BC,IAAAA,MAD6B;AAE7BC,IAAAA,OAF6B;AAG7BC,IAAAA;AAH6B,GAI1B;AAEC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMa,WAAW,GAAGX,UAAU,CAACE,kBAAD,CAA9B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,WAAJ,EAAgB;AAChBH,MAAAA,OAAO,CAACG,WAAW,CAACJ,IAAb,CAAP;AACAG,MAAAA,cAAc,CAACC,WAAW,CAACC,KAAb,CAAd;AAAmC;AAEtC,GALQ,EAKN,CAACD,WAAD,EAAcP,MAAd,CALM,CAAT;;AAOA,WAASS,YAAT,CAAsBC,CAAtB,EAAyB;AACrBN,IAAAA,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AAAA;;AAED,WAASC,uBAAT,CAAiCH,CAAjC,EAAoC;AAChCJ,IAAAA,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH;;AAAA;;AAED,WAASE,YAAT,CAAsBJ,CAAtB,EAAyB;AACrB;AACAA,IAAAA,CAAC,CAACK,cAAF,GAFqB,CAIrB;;AACAb,IAAAA,YAAY,CAAC;AACTC,MAAAA,IADS;AAETK,MAAAA,KAAK,EAAEH;AAFE,KAAD,CAAZ;AAKD;;AAAA;AAEH,sBACI,QAAC,aAAD;AACS,IAAA,KAAK,EAAC,2HADf;AAES,IAAA,IAAI,EAAC,SAFd;AAGS,IAAA,OAAO,EAAEJ,OAHlB;AAIS,IAAA,MAAM,EAAED,MAJjB;AAKS,IAAA,QAAQ,EAAEc;AALnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAUP;;GA/Cef,gB;;KAAAA,gB","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext'; \n\nexport function EditProfilePopup({\n    isOpen, \n    onClose,\n    onUpdateUser\n    }) {\n\n        const [name, setName] = useState('');\n        const [description, setDescription] = useState('');\n        const currentUser = useContext(CurrentUserContext);\n\n        useEffect(() => {\n            if (currentUser){\n            setName(currentUser.name);\n            setDescription(currentUser.about);}\n            \n        }, [currentUser, isOpen]); \n\n        function handleChange(e) {\n            setName(e.target.value);\n        };\n        \n        function handleChangeDescription(e) {\n            setDescription(e.target.value);\n        };\n        \n        function handleSubmit(e) {\n            // Запрещаем браузеру переходить по адресу формы\n            e.preventDefault();\n             \n            // Передаём значения управляемых компонентов во внешний обработчик\n            onUpdateUser({\n                name,\n                about: description,\n              });\n               \n          }; \n\n        return ( \n            <PopupWithForm\n                     title='Редактировать профиль'\n                     name='profile'\n                     onClose={onClose}\n                     isOpen={isOpen}\n                     onSubmit={handleSubmit}\n                 \n                 />)\n\n}"]},"metadata":{},"sourceType":"module"}