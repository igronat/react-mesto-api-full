{"ast":null,"code":"var _jsxFileName = \"/Users/TommyRadin/Desktop/\\u043C\\u043E\\u0438 \\u0432\\u0435\\u0431 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport editButton from '../images/edit-button.svg';\nimport plus from '../images/plus.svg';\nimport api from '../utils/Api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(_ref) {\n  _s();\n\n  let {\n    onEditAvatar,\n    onEditProfile,\n    onAddPlace,\n    onCardClick,\n    cards,\n    onCardsLike,\n    onCardDelete\n  } = _ref;\n  // const [userName, setUserName] = useState('');\n  // const [userDescription, setUserDescription] = useState('');\n  // const [userAvatar, setUserAvatar] = useState('');\n  // const [cards, setCards] = useState([]);\n  const currentUser = useContext(CurrentUserContext); // useEffect(() => {\n  //     // api\n  //     // .getProfileInfo()\n  //     // .then((res) => {\n  //     //     setUserName(res.name);\n  //     //     setUserDescription(res.about);\n  //     //     setUserAvatar(res.avatar);\n  //     // })\n  //     // .catch(err => console.log(`Ошибка при обновлении профиля: ${err}`));\n  //     api\n  //     .getInitialCards()\n  //     .then((res) => {\n  //         setCards(res)\n  //     })\n  //     .catch(err => console.log(`Ошибка при добавлении карточек: ${err}`))\n  // }, []);\n  // function handleCardLike(card) {\n  //     // Снова проверяем, есть ли уже лайк на этой карточке\n  //     const isLiked = card.likes.some(i => i._id === currentUser._id);\n  //     // Отправляем запрос в API и получаем обновлённые данные карточки\n  //     api\n  //     .changeLikeCardStatus(card._id, isLiked)\n  //     .then((newCard) => {\n  //         setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n  //     });\n  // };\n  // function handleCardDelete(card) {\n  //     // Снова проверяем, являемся ли мы владельцем текущей карточки\n  //     const isOwn = card.owner._id === currentUser._id;\n  //     // Отправляем запрос в API и получаем обновлённые данные карточки\n  //     api\n  //     .deleteCard(card._id, !isOwn)\n  //     .then((newCard) => {\n  //         setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n  //     });\n  // } \n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"profile__image\",\n        alt: \"\\u0444\\u043E\\u0442\\u043E\",\n        src: currentUser === null || currentUser === void 0 ? void 0 : currentUser.avatar,\n        onClick: onEditAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__title-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__title\",\n            children: currentUser === null || currentUser === void 0 ? void 0 : currentUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"profile__edit-button\",\n            onClick: onEditProfile,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n              src: editButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__text\",\n          children: currentUser === null || currentUser === void 0 ? void 0 : currentUser.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n        type: \"button\",\n        className: \"profile__add-button\",\n        onClick: onAddPlace,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile__button-img\",\n          alt: \"\\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n          src: plus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        onCardClick: onCardClick,\n        onCardLike: onCardsLike,\n        onCardDelete: handleCardDelete\n      }, `card${card._id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Main;\n;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/TommyRadin/Desktop/мои веб разработки/mesto-react/src/components/Main.js"],"names":["React","useEffect","useState","useContext","editButton","plus","api","Card","CurrentUserContext","Main","onEditAvatar","onEditProfile","onAddPlace","onCardClick","cards","onCardsLike","onCardDelete","currentUser","avatar","name","about","map","card","handleCardDelete","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport editButton from '../images/edit-button.svg'\nimport plus from '../images/plus.svg'\nimport api from '../utils/Api';\nimport Card from './Card';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js'\n\nfunction Main({\n    onEditAvatar,\n    onEditProfile,\n    onAddPlace,\n    onCardClick,\n    cards,\n    onCardsLike,\n    onCardDelete\n   }) \n   {\n\n    // const [userName, setUserName] = useState('');\n    // const [userDescription, setUserDescription] = useState('');\n    // const [userAvatar, setUserAvatar] = useState('');\n    // const [cards, setCards] = useState([]);\n    const currentUser = useContext(CurrentUserContext);\n\n    // useEffect(() => {\n    //     // api\n    //     // .getProfileInfo()\n    //     // .then((res) => {\n    //     //     setUserName(res.name);\n    //     //     setUserDescription(res.about);\n    //     //     setUserAvatar(res.avatar);\n            \n    //     // })\n    //     // .catch(err => console.log(`Ошибка при обновлении профиля: ${err}`));\n\n    //     api\n    //     .getInitialCards()\n    //     .then((res) => {\n    //         setCards(res)\n            \n    //     })\n    //     .catch(err => console.log(`Ошибка при добавлении карточек: ${err}`))\n\n    // }, []);\n\n    // function handleCardLike(card) {\n    //     // Снова проверяем, есть ли уже лайк на этой карточке\n    //     const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n    //     // Отправляем запрос в API и получаем обновлённые данные карточки\n    //     api\n    //     .changeLikeCardStatus(card._id, isLiked)\n    //     .then((newCard) => {\n    //         setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    //     });\n    // };\n    \n    // function handleCardDelete(card) {\n    //     // Снова проверяем, являемся ли мы владельцем текущей карточки\n    //     const isOwn = card.owner._id === currentUser._id;\n        \n    //     // Отправляем запрос в API и получаем обновлённые данные карточки\n    //     api\n    //     .deleteCard(card._id, !isOwn)\n    //     .then((newCard) => {\n    //         setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    //     });\n    // } \n\n    return (\n        <main className=\"content\">\n\n        <section className=\"profile\">\n            <img className=\"profile__image\" alt=\"фото\" src={currentUser?.avatar} onClick={onEditAvatar}/>\n            <div className=\"profile__info\">\n                <div className=\"profile__title-button\">\n                    <h1 className=\"profile__title\">{currentUser?.name}</h1>\n                    <button type=\"button\" className=\"profile__edit-button\" onClick={onEditProfile}>\n                        <img alt=\"Редактировать\" src={editButton}/>\n                    </button>\n                </div>\n                <p className=\"profile__text\">{currentUser?.about}</p>\n            </div>\n            <button aria-label=\"Добавить\" type=\"button\" className=\"profile__add-button\" onClick={onAddPlace}>\n                <img className=\"profile__button-img\" alt=\"добавить\" src={plus}/>\n            </button>\n        </section>\n\n        <section className=\"elements\">\n            { cards.map((card) => ( <Card card={card} onCardClick={onCardClick} onCardLike={onCardsLike} onCardDelete={handleCardDelete} key={`card${card._id}`}/>))}\n        </section>\n\n    </main>\n    )\n};\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}