{"ast":null,"code":"var _jsxFileName = \"/Users/TommyRadin/Desktop/\\u043C\\u043E\\u0438 \\u0432\\u0435\\u0431 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function EditProfilePopup(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onUpdateUser\n  } = _ref;\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const currentUser = useContext(CurrentUserContext);\n  useEffect(() => {\n    if (currentUser) {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    }\n\n    console.log(currentUser);\n  }, [currentUser]);\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  ;\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  ;\n\n  function handleSubmit(e) {\n    console.log(onUpdateUser); // Запрещаем браузеру переходить по адресу формы\n\n    e.preventDefault();\n    console.log(name);\n    console.log(description); // Передаём значения управляемых компонентов во внешний обработчик\n\n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    name: \"profile\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        value: name || '',\n        onChange: handleChange,\n        type: \"text\",\n        className: \"popup__input popup__text popup__text_type_name\",\n        name: \"name\",\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"name-error\",\n        className: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"job\",\n        value: description || '',\n        onChange: handleChangeDescription,\n        type: \"text\",\n        className: \"popup__input popup__text popup__text_type_job\",\n        name: \"job\",\n        placeholder: \"\\u041F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F\",\n        required: true,\n        minLength: \"2\",\n        maxLength: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"job-error\",\n        className: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true),\n    onClose: onClose,\n    isOpen: isOpen,\n    onSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n}\n\n_s(EditProfilePopup, \"xN46w6he9KBZHBk1q+JY6GV4FrA=\");\n\n_c = EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/TommyRadin/Desktop/мои веб разработки/mesto-react/src/components/EditProfilePopup.js"],"names":["React","useState","useEffect","useContext","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","name","setName","description","setDescription","currentUser","about","console","log","handleChange","e","target","value","handleChangeDescription","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext'; \n\nexport function EditProfilePopup({\n    isOpen, \n    onClose,\n    onUpdateUser\n    }) {\n\n        const [name, setName] = useState('');\n        const [description, setDescription] = useState('');\n        const currentUser = useContext(CurrentUserContext);\n\n        useEffect(() => {\n            if (currentUser){\n            setName(currentUser.name);\n            setDescription(currentUser.about);}\n            console.log(currentUser)\n            \n          }, [currentUser]); \n\n        function handleChange(e) {\n            setName(e.target.value);\n          };\n        \n        function handleChangeDescription(e) {\n            setDescription(e.target.value);\n        };\n        \n        function handleSubmit(e) {\n            console.log(onUpdateUser)\n            // Запрещаем браузеру переходить по адресу формы\n            e.preventDefault();\n             \n            console.log(name) \n            console.log(description) \n            // Передаём значения управляемых компонентов во внешний обработчик\n            onUpdateUser({\n                name,\n                about: description,\n              });\n              \n              \n          } \n\n        \n\n        return ( \n            <PopupWithForm\n                     title='Редактировать профиль'\n                     name='profile'\n                     children={\n                         <>\n                         <input id=\"name\" value={name || ''} onChange={(handleChange)} type=\"text\" className=\"popup__input popup__text popup__text_type_name\" name=\"name\" placeholder=\"Имя\" required minLength=\"2\" maxLength=\"40\"/>\n                         <span id=\"name-error\" className=\"error\"></span>\n                         <input id=\"job\" value={description || ''} onChange={handleChangeDescription} type=\"text\" className=\"popup__input popup__text popup__text_type_job\" name=\"job\" placeholder=\"Профессия\" required minLength=\"2\" maxLength=\"200\"/>\n                         <span id=\"job-error\" className=\"error\"></span>\n                         </>\n                     }\n                     onClose={onClose}\n                     isOpen={isOpen}\n                     onSubmit={handleSubmit}\n                 \n                 />)\n\n}"]},"metadata":{},"sourceType":"module"}