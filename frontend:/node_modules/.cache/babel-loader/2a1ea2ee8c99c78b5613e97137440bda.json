{"ast":null,"code":"var _jsxFileName = \"/Users/TommyRadin/Desktop/\\u043C\\u043E\\u0438 \\u0432\\u0435\\u0431 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport { EditProfilePopup } from \"./EditProfilePopup\";\nimport { EditAvatarPopup } from \"./EditAvatarPopup\";\nimport { AddPlacePopup } from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport * as auth from \"../utils/Auth.js\";\nimport ok from \"../images/ok.jpg\";\nimport bad from \"../images/bad.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({\n    name: \"\",\n    about: \"\"\n  });\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const history = useHistory();\n  const [isSuccess, setSuccess] = useState(false);\n  const [isFailure, setFailure] = useState(false);\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n  useEffect(() => {\n    if (loggedIn) {\n      api.getProfileInfo().then(user => {\n        setCurrentUser(user);\n      }).catch(err => console.log(`Ошибка профиля: ${err}`));\n      api.getInitialCards().then(res => {\n        setCards(res);\n      }).catch(err => console.log(`Ошибка при добавлении карточек: ${err}`));\n    }\n  }, [loggedIn]); // useEffect(() => {\n  //     const handleEscClose = (e) => {\n  //       if (e.key === \"Escape\") {\n  //         closeAllPopups();\n  //       }\n  //     };\n  //     document.addEventListener(\"keydown\", handleEscClose);\n  //     return () => document.removeEventListener(\"keydown\", handleEscClose);\n  //   }, []);\n\n  const handleRegister = (email, password) => {\n    return auth.register(email, password).then(res => {\n      if (res) {\n        setSuccess(true);\n        history.push(\"/signin\");\n        console.log(res);\n      }\n\n      setFailure(true);\n    }).catch(err => {\n      console.log(`Ошибка регистрации пользователя: ${err}`);\n    });\n  };\n\n  const handleLogin = (email, password) => {\n    return auth.authorize(email, password).then(data => {\n      if (data.token) {\n        localStorage.setItem(\"token\", data.token);\n        const userData = {\n          email,\n          password\n        };\n        setUserData(userData);\n        setLoggedIn({\n          loggedIn: true\n        });\n        history.push(\"/\");\n      }\n    }).catch(err => {\n      console.log(`Ошибка авторизации пользователя: ${err}`);\n    });\n  };\n\n  function tokenCheck() {\n    if (localStorage.getItem(\"token\")) {\n      let token = localStorage.getItem(\"token\");\n      auth.getContent(token).then(_ref => {\n        let {\n          data\n        } = _ref;\n\n        if (data) {\n          let userData = {\n            email: data.email,\n            id: data._id\n          };\n          setUserData(userData);\n          setLoggedIn({\n            loggedIn: true\n          });\n          history.push(\"/\");\n        }\n      });\n    }\n  }\n\n  const signOut = () => {\n    localStorage.removeItem(\"token\");\n    history.push(\"/signin\");\n  };\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n    setSuccess(false);\n    setFailure(false);\n  };\n\n  const handleUpdateUser = user => {\n    api.editProfile(user).then(res => {\n      setCurrentUser(res);\n      setEditProfilePopupOpen(false);\n    }).catch(err => console.log(`Ошибка обновления профиля: ${err}`));\n  };\n\n  const handleUpdateAvatar = user => {\n    api.avatarProfile(user).then(res => {\n      setCurrentUser(res);\n      setEditAvatarPopupOpen(false);\n    }).catch(err => console.log(`Ошибка аватара: ${err}`));\n  };\n\n  const handleAddPlaceSubmit = user => {\n    api.addCard(user).then(res => {\n      setAddPlacePopupOpen(false);\n      setCards([res, ...cards]);\n    }).catch(err => console.log(`Ошибка аватара: ${err}`));\n  };\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    // Снова проверяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id; // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.deleteCard(card._id, !isOwn).then(() => {\n      setCards(state => state.filter(c => c._id != card._id));\n    });\n  }\n\n  function componentCards() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardsLike: handleCardLike,\n        onCardDelete: handleCardDelete,\n        userData: userData,\n        signOut: signOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } //   function isSuccess() {\n  //       return (\n  //         <InfoTooltip\n  //         name=\"ok\"\n  //         img={ok}\n  //         title=\"Вы успешно зарегистрировались\"\n  //         isOpen={isInfoTooltipOpen}\n  //         onClose={closeAllPopups}\n  //       />\n  //       )\n  //   }\n  //   function isFailure() {\n  //     setInfoTooltipOpen(true);\n  //     return (\n  //         <InfoTooltip\n  //         name=\"bad\"\n  //         img={bad}\n  //         title=\"Что-то пошло не так! Попробуйте еще раз.\"\n  //         isOpen={isInfoTooltipOpen}\n  //         onClose={closeAllPopups}\n  //       />\n  //     )\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        exact: true,\n        path: \"/\",\n        loggedIn: loggedIn,\n        component: componentCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signin\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          handleLogin: handleLogin //   isSuccess={isSuccess}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(Register, {\n          handleRegister: handleRegister //   isFailure={isFailure}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n      name: \"ok\",\n      img: ok,\n      title: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C\",\n      isOpen: isSuccess,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n      name: \"bad\",\n      img: bad,\n      title: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A! \\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0435 \\u0440\\u0430\\u0437.\",\n      isOpen: isFailure,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kfGSPKQUMbXbGIbJwSgqUIjK+DY=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/TommyRadin/Desktop/мои веб разработки/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","Redirect","useHistory","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","ProtectedRoute","InfoTooltip","auth","ok","bad","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","name","about","cards","setCards","loggedIn","setLoggedIn","history","isSuccess","setSuccess","isFailure","setFailure","userData","setUserData","tokenCheck","getProfileInfo","then","user","catch","err","console","log","getInitialCards","res","handleRegister","email","password","register","push","handleLogin","authorize","data","token","localStorage","setItem","getItem","getContent","id","_id","signOut","removeItem","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeAllPopups","handleUpdateUser","editProfile","handleUpdateAvatar","avatarProfile","handleAddPlaceSubmit","addCard","handleCardLike","isLiked","likes","some","i","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","isOwn","owner","deleteCard","filter","componentCards"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport { EditProfilePopup } from \"./EditProfilePopup\";\nimport { EditAvatarPopup } from \"./EditAvatarPopup\";\nimport { AddPlacePopup } from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport * as auth from \"../utils/Auth.js\";\nimport ok from \"../images/ok.jpg\";\nimport bad from \"../images/bad.jpg\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({ name: \"\", about: \"\" });\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const history = useHistory();\n  const [isSuccess, setSuccess] = useState(false);\n  const [isFailure, setFailure] = useState(false);\n  const [userData, setUserData] = useState({});\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  useEffect(() => {\n    if (loggedIn) {\n      api\n        .getProfileInfo()\n        .then((user) => {\n          setCurrentUser(user);\n        })\n        .catch((err) => console.log(`Ошибка профиля: ${err}`));\n\n      api\n        .getInitialCards()\n        .then((res) => {\n          setCards(res);\n        })\n        .catch((err) => console.log(`Ошибка при добавлении карточек: ${err}`));\n    }\n  }, [loggedIn]);\n\n  // useEffect(() => {\n  //     const handleEscClose = (e) => {\n  //       if (e.key === \"Escape\") {\n  //         closeAllPopups();\n  //       }\n  //     };\n\n  //     document.addEventListener(\"keydown\", handleEscClose);\n\n  //     return () => document.removeEventListener(\"keydown\", handleEscClose);\n\n  //   }, []);\n\n  const handleRegister = (email, password) => {\n    return auth\n      .register(email, password)\n      .then((res) => {\n        if (res) {\n          setSuccess(true);\n          history.push(\"/signin\");\n        console.log(res)\n        }\n        setFailure(true)\n        \n      })\n      .catch((err) => {\n        console.log(`Ошибка регистрации пользователя: ${err}`);\n      });\n  };\n\n  const handleLogin = (email, password) => {\n    return auth\n      .authorize(email, password)\n      .then((data) => {\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token);\n          const userData = { email, password };\n          setUserData(userData);\n          setLoggedIn({\n            loggedIn: true,\n          });\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(`Ошибка авторизации пользователя: ${err}`);\n      });\n  };\n\n  function tokenCheck() {\n    if (localStorage.getItem(\"token\")) {\n      let token = localStorage.getItem(\"token\");\n      auth.getContent(token).then(({ data }) => {\n        if (data) {\n          let userData = {\n            email: data.email,\n            id: data._id,\n          };\n          setUserData(userData);\n          setLoggedIn({\n            loggedIn: true,\n          });\n          history.push(\"/\");\n        }\n      });\n    }\n  }\n\n  const signOut = () => {\n    localStorage.removeItem(\"token\");\n    history.push(\"/signin\");\n  };\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n    setSuccess(false);\n    setFailure(false)\n  };\n\n  const handleUpdateUser = (user) => {\n    api\n      .editProfile(user)\n      .then((res) => {\n        setCurrentUser(res);\n        setEditProfilePopupOpen(false);\n      })\n      .catch((err) => console.log(`Ошибка обновления профиля: ${err}`));\n  };\n\n  const handleUpdateAvatar = (user) => {\n    api\n      .avatarProfile(user)\n      .then((res) => {\n        setCurrentUser(res);\n        setEditAvatarPopupOpen(false);\n      })\n      .catch((err) => console.log(`Ошибка аватара: ${err}`));\n  };\n\n  const handleAddPlaceSubmit = (user) => {\n    api\n      .addCard(user)\n      .then((res) => {\n        setAddPlacePopupOpen(false);\n        setCards([res, ...cards]);\n      })\n      .catch((err) => console.log(`Ошибка аватара: ${err}`));\n  };\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n    });\n  }\n\n  function handleCardDelete(card) {\n    // Снова проверяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id;\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.deleteCard(card._id, !isOwn).then(() => {\n      setCards((state) => state.filter((c) => c._id != card._id));\n    });\n  }\n\n  function componentCards() {\n    return (\n      <>\n        <Main\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardsLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          userData={userData}\n          signOut={signOut}\n        />\n\n        <Footer />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </>\n    );\n  }\n\n//   function isSuccess() {\n//       return (\n//         <InfoTooltip\n//         name=\"ok\"\n//         img={ok}\n//         title=\"Вы успешно зарегистрировались\"\n//         isOpen={isInfoTooltipOpen}\n//         onClose={closeAllPopups}\n//       />\n\n//       )\n//   }\n\n//   function isFailure() {\n//     setInfoTooltipOpen(true);\n//     return (\n//         <InfoTooltip\n//         name=\"bad\"\n//         img={bad}\n//         title=\"Что-то пошло не так! Попробуйте еще раз.\"\n//         isOpen={isInfoTooltipOpen}\n//         onClose={closeAllPopups}\n//       />\n\n//     )\n// }\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Switch>\n        <ProtectedRoute\n          exact\n          path=\"/\"\n          loggedIn={loggedIn}\n          component={componentCards}\n        />\n\n        <Route path=\"/signin\">\n          <Login \n          handleLogin={handleLogin} \n        //   isSuccess={isSuccess}\n          />\n          {/* <InfoTooltip\n            name=\"ok\"\n            img={ok}\n            title=\"Вы успешно зарегистрировались\"\n            isOpen={isInfoTooltipOpen}\n            onClose={closeAllPopups}\n          /> */}\n        </Route>\n\n        <Route path=\"/signup\">\n          <Register handleRegister={handleRegister} \n        //   isFailure={isFailure}\n          />\n          {/* <InfoTooltip\n            name=\"bad\"\n            img={bad}\n            title=\"Что-то пошло не так! Попробуйте еще раз.\"\n            isOpen={isInfoTooltipOpen}\n            onClose={closeAllPopups}\n          /> */}\n        </Route>\n\n        <Route exact path=\"/\">\n          {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\n        </Route>\n      </Switch>\n\n      <InfoTooltip\n        name=\"ok\"\n        img={ok}\n        title=\"Вы успешно зарегистрировались\"\n        isOpen={isSuccess}\n        onClose={closeAllPopups}\n      />\n\n<InfoTooltip\n        name=\"bad\"\n        img={bad}\n        title=\"Что-то пошло не так! Попробуйте еще раз.\"\n        isOpen={isFailure}\n        onClose={closeAllPopups}\n      />\n\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}