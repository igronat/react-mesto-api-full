{"ast":null,"code":"var _jsxFileName = \"/Users/TommyRadin/Desktop/\\u043C\\u043E\\u0438 \\u0432\\u0435\\u0431 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport { AddPlacePopup } from './AddPlacePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from './Auth.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({\n    name: '',\n    about: ''\n  });\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const history = useHistory(); // useEffect(() => {\n  //    tokenCheck()\n  // // }, [])\n  // useEffect(() => {\n  //     if (loggedIn) {\n  //         history.push(\"/singup\")\n  //     }\n  // }, [loggedIn])\n\n  useEffect(() => {\n    api.getProfileInfo().then(user => {\n      setCurrentUser(user);\n    }).catch(err => console.log(`Ошибка профиля: ${err}`));\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => console.log(`Ошибка при добавлении карточек: ${err}`));\n  }, []);\n  useEffect(() => {\n    const handleEscClose = e => {\n      if (e.key === \"Escape\") {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscClose);\n    return () => document.removeEventListener(\"keydown\", handleEscClose);\n  }, []);\n\n  const handleRegister = (email, password) => {\n    return auth.register(email, password).then(() => {\n      history.push('/signin');\n    });\n  };\n\n  const handleLogin = (email, password) => {\n    // e.preventDefault();\n    // setLoggedIn({\n    //     loggedIn: true\n    // });\n    // history.push(\"/signup\")\n    return auth.authorize(email, password).then(data => {\n      if (data.jwt) {\n        // localStorage.setItem('jwt', data.jwt);\n        // const { user: { username, email } } = data;\n        // const userData = { username, email }\n        // setUserData(userData)\n        setLoggedIn(true);\n        history.push('/ducks');\n      }\n    });\n  };\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  };\n\n  const handleUpdateUser = user => {\n    api.editProfile(user).then(res => {\n      setCurrentUser(res);\n      setEditProfilePopupOpen(false);\n    }).catch(err => console.log(`Ошибка обновления профиля: ${err}`));\n  };\n\n  const handleUpdateAvatar = user => {\n    api.avatarProfile(user).then(res => {\n      setCurrentUser(res);\n      setEditAvatarPopupOpen(false);\n    }).catch(err => console.log(`Ошибка аватара: ${err}`));\n  };\n\n  const handleAddPlaceSubmit = user => {\n    api.addCard(user).then(res => {\n      setAddPlacePopupOpen(false);\n      setCards([res, ...cards]);\n    }).catch(err => console.log(`Ошибка аватара: ${err}`));\n  };\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  ;\n\n  function handleCardDelete(card) {\n    // Снова проверяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id; // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.deleteCard(card._id, !isOwn).then(() => {\n      setCards(state => state.filter(c => c._id != card._id));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        exact: true,\n        path: \"/\",\n        loggedIn: loggedIn,\n        component: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Main, {\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            cards: cards,\n            onCardsLike: handleCardLike,\n            onCardDelete: handleCardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: isEditProfilePopupOpen,\n            onClose: closeAllPopups,\n            onUpdateUser: handleUpdateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: isAddPlacePopupOpen,\n            onClose: closeAllPopups,\n            onAddPlace: handleAddPlaceSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: isEditAvatarPopupOpen,\n            onClose: closeAllPopups,\n            onUpdateAvatar: handleUpdateAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: selectedCard,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signin\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          handleLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        children: [/*#__PURE__*/_jsxDEV(Register, {\n          handleRegister: handleRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooltip // name= \n        // img= \n        // title= \n        // isOpen=\n        // onClose=\n        , {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"lVFPqN/2PShHAvFOzKhnnE2D0hw=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/TommyRadin/Desktop/мои веб разработки/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","Redirect","useHistory","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","ProtectedRoute","InfoTooltip","auth","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","name","about","cards","setCards","loggedIn","setLoggedIn","history","getProfileInfo","then","user","catch","err","console","log","getInitialCards","res","handleEscClose","e","key","closeAllPopups","document","addEventListener","removeEventListener","handleRegister","email","password","register","push","handleLogin","authorize","data","jwt","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleUpdateUser","editProfile","handleUpdateAvatar","avatarProfile","handleAddPlaceSubmit","addCard","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","isOwn","owner","deleteCard","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\nimport {EditProfilePopup} from './EditProfilePopup';\nimport {EditAvatarPopup} from './EditAvatarPopup';\nimport {AddPlacePopup} from './AddPlacePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from './Auth.js';\n\nfunction App() {\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(null);\n    const [currentUser, setCurrentUser] = useState({name: '', about: ''});\n    const [cards, setCards] = useState([]);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const history = useHistory();\n\n    // useEffect(() => {\n    //    tokenCheck()\n    // // }, [])\n\n    // useEffect(() => {\n    //     if (loggedIn) {\n    //         history.push(\"/singup\")\n    //     }\n    // }, [loggedIn])\n\n    useEffect(() => {\n        api\n        .getProfileInfo()\n        .then((user) => {\n            setCurrentUser(user);\n            \n        })\n        .catch(err => console.log(`Ошибка профиля: ${err}`));\n\n        api\n        .getInitialCards()\n        .then((res) => {\n            setCards(res)\n            \n        })\n        .catch(err => console.log(`Ошибка при добавлении карточек: ${err}`))\n    }, []); \n\n    useEffect(() => {\n        const handleEscClose = (e) => {\n          if (e.key === \"Escape\") {\n            closeAllPopups();\n          }\n        };\n    \n        document.addEventListener(\"keydown\", handleEscClose);\n    \n        return () => document.removeEventListener(\"keydown\", handleEscClose);\n\n      }, []); \n\n    const handleRegister = (email, password) => {\n        return auth.register(email, password).then(() => {\n          history.push('/signin');\n        });\n    }\n\n    const handleLogin = (email, password) => {\n        // e.preventDefault();\n        // setLoggedIn({\n        //     loggedIn: true\n        // });\n        // history.push(\"/signup\")\n        return auth.authorize(email, password)\n        .then((data) => {\n          if (data.jwt){\n            // localStorage.setItem('jwt', data.jwt);\n            // const { user: { username, email } } = data;\n            // const userData = { username, email }\n            // setUserData(userData)\n            setLoggedIn(true);\n            history.push('/ducks')\n          }\n        })\n      \n    } \n\n    const handleEditAvatarClick = () => {\n        setEditAvatarPopupOpen(true);\n    };\n    const handleEditProfileClick = () => {\n        setEditProfilePopupOpen(true);\n    }\n    const handleAddPlaceClick= () => {\n        setAddPlacePopupOpen(true);\n    }\n    const handleCardClick = (card) => {\n        setSelectedCard(card);\n    }\n\n    const closeAllPopups = () => {\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setEditAvatarPopupOpen(false);\n        setSelectedCard(null);\n    }\n\n    const handleUpdateUser = (user) => {\n        api\n        .editProfile(user)\n        .then(res => {\n            setCurrentUser(res);\n            setEditProfilePopupOpen(false);\n        \n        })\n        .catch(err => console.log(`Ошибка обновления профиля: ${err}`));\n    };\n\n    const handleUpdateAvatar = (user) => {\n        api\n        .avatarProfile(user)\n        .then((res) => {\n            setCurrentUser(res);\n            setEditAvatarPopupOpen(false);\n        })\n        .catch(err => console.log(`Ошибка аватара: ${err}`));\n    };\n\n    const handleAddPlaceSubmit = (user) => {\n        api\n        .addCard(user)\n        .then((res) => {\n            setAddPlacePopupOpen(false);\n            setCards([res, ...cards]);\n        })\n        .catch(err => console.log(`Ошибка аватара: ${err}`));\n    }\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api\n        .changeLikeCardStatus(card._id, isLiked)\n        .then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    };\n    \n    function handleCardDelete(card) {\n        // Снова проверяем, являемся ли мы владельцем текущей карточки\n        const isOwn = card.owner._id === currentUser._id;\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api\n        .deleteCard(card._id, !isOwn)\n        .then(() => {\n            setCards((state) => state.filter((c) => c._id != card._id ));\n\n        });\n    } \n\n    return (  \n        <CurrentUserContext.Provider value={currentUser}>\n       \n            <Switch>\n\n                <ProtectedRoute\n                exact path=\"/\"\n                loggedIn={loggedIn}\n                component={\n                    <>\n                    <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n                    cards={cards}\n                    onCardsLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                    />\n\n                    <Footer/>\n\n                    <EditProfilePopup \n                    isOpen={isEditProfilePopupOpen} \n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser} \n                    /> \n\n                    <AddPlacePopup \n                    isOpen={isAddPlacePopupOpen} \n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit} \n                    />\n\n                    <EditAvatarPopup \n                    isOpen={isEditAvatarPopupOpen} \n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar} \n                    />\n\n                    <ImagePopup \n                    card = {selectedCard}\n                    onClose = {closeAllPopups}\n                    />\n\n                    </>\n\n                }\n                />\n        \n                <Route path=\"/signin\">  \n                    <Login  handleLogin={handleLogin}/>\n                </Route>\n\n                <Route path=\"/signup\">\n                    <Register handleRegister={handleRegister}/>\n                    <InfoTooltip \n                    // name= \n                    // img= \n                    // title= \n                    // isOpen=\n                    // onClose=\n                    />\n                </Route>\n\n                {/* <Route exact path='/'>\n\n                    <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n                    cards={cards}\n                    onCardsLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                    />\n\n                    <Footer/>\n\n                    <EditProfilePopup \n                    isOpen={isEditProfilePopupOpen} \n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser} \n                    /> \n\n                    <AddPlacePopup \n                    isOpen={isAddPlacePopupOpen} \n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit} \n                    />\n\n                    <EditAvatarPopup \n                    isOpen={isEditAvatarPopupOpen} \n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar} \n                    />\n\n                    <ImagePopup \n                    card = {selectedCard}\n                    onClose = {closeAllPopups}\n            \n                    />\n        \n                </Route> */}\n       \n                <Route exact path=\"/\">\n                {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\n          \n                </Route>\n \n            </Switch>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}