{"ast":null,"code":"var _jsxFileName = \"/Users/TommyRadin/Desktop/\\u043C\\u043E\\u0438 \\u0432\\u0435\\u0431 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport { AddPlacePopup } from './AddPlacePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from './Auth.js';\nimport ok from '../images/ok.jpg';\nimport bad from '../images/bad.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({\n    name: '',\n    about: ''\n  });\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const history = useHistory();\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = useState(false);\n  const [userData, setUserData] = useState({}); // useEffect(() => {\n  //    tokenCheck()\n  // // }, [])\n  // useEffect(() => {\n  //     if (loggedIn) {\n  //         history.push(\"/singup\")\n  //     }\n  // }, [loggedIn])\n\n  useEffect(() => {\n    api.getProfileInfo().then(user => {\n      setCurrentUser(user);\n    }).catch(err => console.log(`Ошибка профиля: ${err}`));\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => console.log(`Ошибка при добавлении карточек: ${err}`));\n  }, []);\n  useEffect(() => {\n    const handleEscClose = e => {\n      if (e.key === \"Escape\") {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscClose);\n    return () => document.removeEventListener(\"keydown\", handleEscClose);\n  }, []);\n\n  const handleRegister = (email, password) => {\n    return auth.register(email, password).then(res => {\n      if (res) {\n        history.push('/signin');\n        setInfoTooltipOpen(true);\n      }\n\n      setInfoTooltipOpen(true);\n    }).catch(err => {\n      console.log(`Ошибка регистрации пользователя: ${err}`);\n    });\n  };\n\n  const handleLogin = (email, password) => {\n    return auth.authorize(email, password).then(data => {\n      if (data.jwt) {\n        localStorage.setItem('jwt', data.jwt);\n        const {\n          user: {\n            email,\n            password\n          }\n        } = data;\n        const userData = {\n          email,\n          password\n        };\n        setUserData(userData);\n        setLoggedIn({\n          loggedIn: true\n        });\n        history.push('/');\n      }\n    });\n  };\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n\n  const handleInfoTooltipClick = () => {\n    setInfoTooltipOpen(true);\n  };\n\n  const closeAllPopups = () => {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n    setInfoTooltipOpen(false);\n  };\n\n  const handleUpdateUser = user => {\n    api.editProfile(user).then(res => {\n      setCurrentUser(res);\n      setEditProfilePopupOpen(false);\n    }).catch(err => console.log(`Ошибка обновления профиля: ${err}`));\n  };\n\n  const handleUpdateAvatar = user => {\n    api.avatarProfile(user).then(res => {\n      setCurrentUser(res);\n      setEditAvatarPopupOpen(false);\n    }).catch(err => console.log(`Ошибка аватара: ${err}`));\n  };\n\n  const handleAddPlaceSubmit = user => {\n    api.addCard(user).then(res => {\n      setAddPlacePopupOpen(false);\n      setCards([res, ...cards]);\n    }).catch(err => console.log(`Ошибка аватара: ${err}`));\n  };\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  ;\n\n  function handleCardDelete(card) {\n    // Снова проверяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id; // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.deleteCard(card._id, !isOwn).then(() => {\n      setCards(state => state.filter(c => c._id != card._id));\n    });\n  }\n\n  function componentCards() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardsLike: handleCardLike,\n        onCardDelete: handleCardDelete // email={email}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        exact: true,\n        path: \"/\",\n        loggedIn: loggedIn,\n        component: componentCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signin\",\n        children: [/*#__PURE__*/_jsxDEV(Login, {\n          handleLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n          name: \"ok\",\n          img: ok,\n          title: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C\",\n          isOpen: isInfoTooltipOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        children: [/*#__PURE__*/_jsxDEV(Register, {\n          handleRegister: handleRegister // onRegister={handleInfoTooltipClick}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n          name: \"bad\",\n          img: bad,\n          title: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A! \\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0435 \\u0440\\u0430\\u0437.\",\n          isOpen: isInfoTooltipOpen,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"xgP9Jk7fW64ZaKKUz1BHhboGyTE=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/TommyRadin/Desktop/мои веб разработки/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","Redirect","useHistory","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","ProtectedRoute","InfoTooltip","auth","ok","bad","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","name","about","cards","setCards","loggedIn","setLoggedIn","history","isInfoTooltipOpen","setInfoTooltipOpen","userData","setUserData","getProfileInfo","then","user","catch","err","console","log","getInitialCards","res","handleEscClose","e","key","closeAllPopups","document","addEventListener","removeEventListener","handleRegister","email","password","register","push","handleLogin","authorize","data","jwt","localStorage","setItem","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleInfoTooltipClick","handleUpdateUser","editProfile","handleUpdateAvatar","avatarProfile","handleAddPlaceSubmit","addCard","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","isOwn","owner","deleteCard","filter","componentCards"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\nimport {EditProfilePopup} from './EditProfilePopup';\nimport {EditAvatarPopup} from './EditAvatarPopup';\nimport {AddPlacePopup} from './AddPlacePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from './Auth.js';\nimport ok from '../images/ok.jpg';\nimport bad from '../images/bad.jpg';\n\n\nfunction App() {\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(null);\n    const [currentUser, setCurrentUser] = useState({name: '', about: ''});\n    const [cards, setCards] = useState([]);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const history = useHistory();\n    const [isInfoTooltipOpen, setInfoTooltipOpen] = useState(false);\n    const [userData, setUserData] = useState({});\n\n    // useEffect(() => {\n    //    tokenCheck()\n    // // }, [])\n\n    // useEffect(() => {\n    //     if (loggedIn) {\n    //         history.push(\"/singup\")\n    //     }\n    // }, [loggedIn])\n\n    useEffect(() => {\n        api\n        .getProfileInfo()\n        .then((user) => {\n            setCurrentUser(user);\n            \n        })\n        .catch(err => console.log(`Ошибка профиля: ${err}`));\n\n        api\n        .getInitialCards()\n        .then((res) => {\n            setCards(res)\n            \n        })\n        .catch(err => console.log(`Ошибка при добавлении карточек: ${err}`))\n    }, []); \n\n    useEffect(() => {\n        const handleEscClose = (e) => {\n          if (e.key === \"Escape\") {\n            closeAllPopups();\n          }\n        };\n    \n        document.addEventListener(\"keydown\", handleEscClose);\n    \n        return () => document.removeEventListener(\"keydown\", handleEscClose);\n\n      }, []); \n\n    const handleRegister = (email, password) => {\n        return auth.register(email, password)\n        .then((res) => {\n            if (res) {\n            history.push('/signin');\n            setInfoTooltipOpen(true);\n            }\n            setInfoTooltipOpen(true)\n        })\n        \n        .catch((err) => {console.log(`Ошибка регистрации пользователя: ${err}`)})\n        \n        \n    }\n\n    const handleLogin = (email, password) => {\n        return auth.authorize(email, password)\n        .then((data) => {\n          if (data.jwt){\n            localStorage.setItem('jwt', data.jwt);\n            const { user: { email, password } } = data;\n            const userData = { email, password }\n            setUserData(userData)\n            setLoggedIn({\n                loggedIn: true\n            });\n            history.push('/');\n            \n          }\n        })\n      \n    } \n\n    const handleEditAvatarClick = () => {\n        setEditAvatarPopupOpen(true);\n    };\n    const handleEditProfileClick = () => {\n        setEditProfilePopupOpen(true);\n    }\n    const handleAddPlaceClick= () => {\n        setAddPlacePopupOpen(true);\n    }\n    const handleCardClick = (card) => {\n        setSelectedCard(card);\n    }\n    const handleInfoTooltipClick = () => {\n        setInfoTooltipOpen(true);\n    }\n    \n    const closeAllPopups = () => {\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setEditAvatarPopupOpen(false);\n        setSelectedCard(null);\n        setInfoTooltipOpen(false)\n    }\n\n    const handleUpdateUser = (user) => {\n        api\n        .editProfile(user)\n        .then(res => {\n            setCurrentUser(res);\n            setEditProfilePopupOpen(false);\n        \n        })\n        .catch(err => console.log(`Ошибка обновления профиля: ${err}`));\n    };\n\n    const handleUpdateAvatar = (user) => {\n        api\n        .avatarProfile(user)\n        .then((res) => {\n            setCurrentUser(res);\n            setEditAvatarPopupOpen(false);\n        })\n        .catch(err => console.log(`Ошибка аватара: ${err}`));\n    };\n\n    const handleAddPlaceSubmit = (user) => {\n        api\n        .addCard(user)\n        .then((res) => {\n            setAddPlacePopupOpen(false);\n            setCards([res, ...cards]);\n        })\n        .catch(err => console.log(`Ошибка аватара: ${err}`));\n    }\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api\n        .changeLikeCardStatus(card._id, isLiked)\n        .then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    };\n    \n    function handleCardDelete(card) {\n        // Снова проверяем, являемся ли мы владельцем текущей карточки\n        const isOwn = card.owner._id === currentUser._id;\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api\n        .deleteCard(card._id, !isOwn)\n        .then(() => {\n            setCards((state) => state.filter((c) => c._id != card._id ));\n\n        });\n    } \n\n    function componentCards() {\n        return <>\n                    <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n                    cards={cards}\n                    onCardsLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                    // email={email}\n                    />\n\n                    <Footer/>\n\n                    <EditProfilePopup \n                    isOpen={isEditProfilePopupOpen} \n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser} \n                    /> \n\n                    <AddPlacePopup \n                    isOpen={isAddPlacePopupOpen} \n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit} \n                    />\n\n                    <EditAvatarPopup \n                    isOpen={isEditAvatarPopupOpen} \n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar} \n                    />\n\n                    <ImagePopup \n                    card = {selectedCard}\n                    onClose = {closeAllPopups}\n                    />\n\n                </>\n    } ;\n\n    return (  \n        <CurrentUserContext.Provider value={currentUser}>\n       \n            <Switch>\n\n                <ProtectedRoute\n                exact path=\"/\"\n                loggedIn={loggedIn}\n                component={componentCards}\n                />\n        \n                <Route path=\"/signin\">  \n                    <Login  handleLogin={handleLogin}/>\n                    <InfoTooltip \n                    name= 'ok'\n                    img={ok}\n                    title='Вы успешно зарегистрировались'\n                    isOpen={isInfoTooltipOpen}\n                    onClose={closeAllPopups}\n                    />\n                </Route>\n\n                <Route path=\"/signup\">\n                    <Register \n                    handleRegister={handleRegister}\n                    // onRegister={handleInfoTooltipClick}\n                    />\n                    <InfoTooltip \n                    name= 'bad'\n                    img={bad}\n                    title='Что-то пошло не так! Попробуйте еще раз.'\n                    isOpen={isInfoTooltipOpen}\n                    onClose={closeAllPopups}\n                    />\n                </Route>\n\n                {/* <Route exact path='/'>\n\n                    <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n                    cards={cards}\n                    onCardsLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                    />\n\n                    <Footer/>\n\n                    <EditProfilePopup \n                    isOpen={isEditProfilePopupOpen} \n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser} \n                    /> \n\n                    <AddPlacePopup \n                    isOpen={isAddPlacePopupOpen} \n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit} \n                    />\n\n                    <EditAvatarPopup \n                    isOpen={isEditAvatarPopupOpen} \n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar} \n                    />\n\n                    <ImagePopup \n                    card = {selectedCard}\n                    onClose = {closeAllPopups}\n            \n                    />\n        \n                </Route> */}\n       \n                <Route exact path=\"/\">\n                {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\n          \n                </Route>\n \n            </Switch>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}